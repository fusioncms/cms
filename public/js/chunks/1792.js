(self.webpackChunkfusioncms=self.webpackChunkfusioncms||[]).push([[1792],{2569:(t,e,s)=>{"use strict";s.d(e,{Z:()=>n});const n={props:{value:{type:Object,required:!0}},computed:{settings:{get:function(){return this.value.settings||{}},set:function(t){this.$set(this.value.settings,t)}},errors:function(){return this.value.errors||{}}}}},1792:(t,e,s)=>{"use strict";s.r(e),s.d(e,{default:()=>o});const n={name:"taxonomy-fieldtype-settings",mixins:[s(2569).Z],data:function(){return{taxonomies:[]}},computed:{options:function(){return _.map(this.taxonomies,(function(t){return{label:t.name,value:t.id}}))}},created:function(){var t=this;axios.get("/api/taxonomies").then((function(e){return t.taxonomies=e.data.data}))}};const o=(0,s(1900).Z)(n,(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"row"},[s("ui-select-group",{staticClass:"col w-full sm:w-1/2",attrs:{name:"taxonomy",label:"Taxonomy",help:"The taxonomy from which to show terms.",autocomplete:"off",options:t.options,"has-error":t.errors.has("settings.taxonomy"),"error-message":t.errors.get("settings.taxonomy")},model:{value:t.settings.taxonomy,callback:function(e){t.$set(t.settings,"taxonomy",e)},expression:"settings.taxonomy"}})],1)}),[],!1,null,null,null).exports}}]);