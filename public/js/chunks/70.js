(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{zYON:function(e,r,t){"use strict";t.r(r);function n(e){return function(e){if(Array.isArray(e))return o(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,r){if(!e)return;if("string"==typeof e)return o(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return o(e,r)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}var i={name:"file-fieldtype",data:function(){return{model:this.value,errors:{}}},props:{field:{type:Object,required:!0},value:{type:Array,required:!1,default:function(){return[]}}},methods:{upload:function(e){var r=this,t=new FormData,o=0,i=[];this.errors={},t.append("_method","POST"),_.each(e,(function(e){e instanceof File?(o+=1,t.append("file[]",e)):i.unshift(e)})),o>0&&axios.post("/api/fields/file",t).then((function(e){return i.unshift.apply(i,n(e.data.files))})).catch((function(e){r.errors=e.response.data.errors,_.each(r.errors,(function(e,t){r.model.splice(t,1)}))})),this.$emit("input",i)}}},a=t("KHd+"),l=Object(a.a)(i,(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"field"},[t("p-upload",{ref:"upload",attrs:{name:"file",label:e.field.name,help:e.field.help,placeholder:e.field.settings.placeholder,multiple:!0,errors:e.errors},on:{input:e.upload},model:{value:e.model,callback:function(r){e.model=r},expression:"model"}})],1)}),[],!1,null,null,null);r.default=l.exports}}]);